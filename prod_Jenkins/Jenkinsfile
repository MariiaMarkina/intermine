pipeline {
    agent any
    environment {
      PROD_IP = sh(script: 'cat /usr/share/app_prod_ip.txt', , returnStdout: true).trim()
      VERSION_PROD = VersionNumber([
          versionNumberString : '${BUILD_YEAR}.${BUILD_MONTH}.${BUILD_DAY}',
      ]); 
        
           }

    stages {
    
        stage('Version control') {
          steps { 
              script {
                if (params.apply_plan != 'yes') {
                    input message: 'Deploy to prod?'
                }
              }
              
              sh 'echo Version is 1."$VERSION_PROD"'
              sh '[ -f "./appversionprod.txt" ] &&   echo "file for versions already exists" || touch "./appversionprod.txt" '
              sh 'echo  1."$VERSION_PROD" > ./appversionprod.txt'
              }
        }
        
        stage('Build') {
            options {
                timeout(time: 11, unit: "MINUTES")
            }
            steps {
             catchError(buildResult: 'SUCCESS', stageResult: 'ABORTED') {
              withCredentials([sshUserPrivateKey(credentialsId: 'SSH_ubuntu', keyFileVariable: 'keyfile', usernameVariable: 'userName')]) {
                script {
                  def remote = [:]
                  remote.name = 'node'
                  remote.host = "$PROD_IP"
                  remote.allowAnyHosts = true
                  remote.user = userName
                  remote.identityFile = keyFile
                  sshCommand remote: remote, command: '/opt/tomcat/apache-tomcat-8.5.57/bin/shutdown.sh'
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/.m2" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory .m2 does not exist yet" ' 
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/.intermine" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory .intermine does not exist yet" '
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/.gradle" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory .gradle does not exist yet" '
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/intermine" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory intermine does not exist yet" ' 
                  sshCommand remote: remote, command: '[ -n  $("lsof -i :8080 | grep java") ] && killall java || echo "Java not running yet"'
                  sshCommand remote: remote, command: "sudo git clone --branch master https://github.com/MariiaMarkina/intermine_final /home/ubuntu/intermine"
                  sshCommand remote: remote, command: 'export GRADLE_USER_HOME="/home/ubuntu"'
                  sshCommand remote: remote, command: 'sudo chmod 777 -R /home/ubuntu/intermine'
                  sshCommand remote: remote, command: '/home/ubuntu/intermine/testmine/setup.sh'

                 }
              }
             }
            }
        }
        
        
        
        stage('Deploy to local tomcat') {
            steps {
              withCredentials([sshUserPrivateKey(credentialsId: 'SSH_ubuntu', keyFileVariable: 'keyfile', usernameVariable: 'userName')]) {
                script {
                  def remote = [:]
                  remote.name = 'node'
                  remote.host = "$PROD_IP"
                  remote.allowAnyHosts = true
                  remote.user = userName
                  remote.identityFile = keyFile
                  sshCommand remote: remote, command: 'killall java'
                  sshCommand remote: remote, command: 'cp -R /home/ubuntu/intermine/testmine/webapp/build/serverBaseDir_tomcat8/work/Tomcat/localhost/intermine-demo /opt/tomcat/apache-tomcat-8.5.57/webapps/'
                  sshCommand remote: remote, command: 'cp -R /home/ubuntu/intermine/testmine/webapp/build/serverBaseDir_tomcat8/webapps/intermine-demo /opt/tomcat/apache-tomcat-8.5.57/webapps/'
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/.m2" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory .m2 does not exist yet" ' 
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/.intermine" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory .intermine does not exist yet" '
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/.gradle" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory .gradle does not exist yet" '
                  sshCommand remote: remote, command: '[ -d "/home/ubuntu/intermine" ] &&   sudo rm -r /home/ubuntu/intermine  || echo "directory intermine does not exist yet" '
                  sshCommand remote: remote, command: 'sudo /opt/tomcat/apache-tomcat-8.5.57/bin/startup.sh'

                }
              }
             
            }
        }
        
        
        stage('Test') {
            steps {
                sh 'sleep 20'
                sh 'wget -S "$PROD_IP:8070/intermine-demo"'
              }
        }
        
        

        
        stage('Write version to file on instance') {
            steps {
              withCredentials([sshUserPrivateKey(credentialsId: 'SSH_ubuntu', keyFileVariable: 'keyfile', usernameVariable: 'userName')]) {
                script {
                  def remote = [:]
                  remote.name = 'node'
                  remote.host = "$PROD_IP"
                  remote.allowAnyHosts = true
                  remote.user = userName
                  remote.identityFile = keyFile
                  sshCommand remote: remote, command: '[ -f "/home/ubuntu/appversionprod.txt" ] &&   echo "file for versions already exists" || touch "/home/ubuntu/appversionprod.txt" '
                  sshPut remote: remote, from: './appversionprod.txt', into: '/home/ubuntu/appversionprod.txt'
                  
                }
              }
             
            }
        }
        
       
        
        
        
    }
}
